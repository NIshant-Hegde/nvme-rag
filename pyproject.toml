[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "nvme-rag"
version = "1.0.0"
description = "Professional Retrieval-Augmented Generation system for NVMe Base Specification"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Nishant Hegde", email = "nishant.hegde13@gmail.com"}
]
maintainers = [
    {name = "Nishant Hegde", email = "nishant.hegde13@gmail.com"}
]
keywords = ["rag", "retrieval-augmented-generation", "nvme", "nlp", "ai", "machine-learning", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Linguistic",
    "Environment :: Console",
]
dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "torch>=2.0.0",
    "pypdf>=3.0.0",
    "requests>=2.28.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.5.0",
    "nltk>=3.8",
    "transformers>=4.20.0",
    "accelerate>=0.20.0",
    "datasets>=2.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/example/nvme-rag"
Documentation = "https://github.com/example/nvme-rag/blob/main/README.md"
Repository = "https://github.com/example/nvme-rag.git"
"Bug Tracker" = "https://github.com/example/nvme-rag/issues"
Changelog = "https://github.com/example/nvme-rag/blob/main/CHANGELOG.md"

[project.scripts]
nvme-rag = "nvme_rag.cli.main:main"

[tool.setuptools]
packages = ["nvme_rag", "nvme_rag.cli", "nvme_rag.config", "nvme_rag.core"]
include-package-data = true

[tool.setuptools.package-data]
nvme_rag = ["*.yaml", "*.yml", "*.json", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["nvme_rag"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]